{"version":3,"sources":["../../../views/js/modal_submit.js"],"names":["refreshStalls","refreshProducts","randomString","replace","c","crypto","getRandomValues","Uint8Array","toString","$","click","stallName","val","ajax","url","baseURL","type","data","name","success","iziToast","title","message","error","console","log","response","beforeSend","authorizeXHR","on","stallNameInput","stallID","method","id","onAddProductButtonClick","onModifyProductButtonClick","nameInput","priceInput","descriptionInput","imageInput","product","price","description","image_link","undefined","files","length","image","form","FormData","append","uploadToastID","info","timeout","post","async","contentType","processData","link","hide","document","getElementById","submitAddProduct","warning","xhr","setRequestHeader","localStorage","token"],"mappings":"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","file":"modal_submit.js","sourcesContent":["var refreshStalls;\nvar refreshProducts;\n\nfunction randomString() {\n    // Random string with very little collision possibility\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    )\n}\n\n$(() => {\n\n    //MARK: - Entity Management\n    $('#add-stall-button').click(() => {\n        const stallName = $('#add-stall-name-input').val();\n\n        $.ajax({\n            url: baseURL + 'stalls/',\n            type: 'POST',\n            data: {\n                name: stallName\n            },\n            success: () => {\n                iziToast.success({\n                    title: 'Added',\n                    message: 'Successfully added stall.'\n                });\n\n                refreshStalls();\n            },\n            error: response => {\n                console.log(response);\n                iziToast.error({\n                    title: 'Error',\n                    message: 'Unable to add stall.'\n                })\n            },\n            beforeSend: authorizeXHR\n        });\n\n    });\n    $('#add-stall-modal').on('hidden.bs.modal', () => {\n        $('#add-stall-name-input').val('');\n    });\n\n    $('#rename-stall-button').click(() => {\n        const stallNameInput = $('#rename-stall-name-input');\n        const stallName = stallNameInput.val();\n        const stallID = $('#rename-stall-id').val();\n        stallNameInput.val('');\n\n        $.ajax({\n            url: `${baseURL}stalls/${stallID}/`,\n            method: 'PUT',\n            data: {\n                name: stallName\n            },\n            success: () => {\n                iziToast.success({\n                    title: 'Renamed',\n                    message: 'Successfully renamed stall.'\n                });\n\n                refreshStalls();\n            },\n            error: response => {\n                console.log(response);\n                iziToast.error({\n                    title: 'Error',\n                    id: 'uploading-image-toast',\n                    message: 'Unable to rename stall.'\n                })\n            },\n            beforeSend: authorizeXHR\n        });\n    });\n\n    $('#delete-stall-button').click(() => {\n        const stallID = $('#delete-stall-id').val();\n\n        $.ajax({\n            url: baseURL + 'stalls/' + stallID + '/',\n            method: 'DELETE',\n            success: () => {\n                iziToast.success({\n                    title: 'Deleted',\n                    message: 'Successfully deleted stall.'\n                });\n\n                refreshStalls();\n            },\n            error: response => {\n                console.log(response);\n                iziToast.success({\n                    title: 'Added',\n                    message: 'Could not delete stall.'\n                })\n            },\n            beforeSend: authorizeXHR\n        })\n    });\n\n    $('#add-product-button').click(onAddProductButtonClick);\n    $('#add-product-modal').on('hidden.bs.modal', () => {\n        $('#add-product-name-input').val('');\n        $('#add-product-price-input').val('');\n        $('#add-product-description-input').val('');\n        $('#add-product-image-input').val('');\n    });\n\n    $('#modify-product-button').click();\n\n});\n\nfunction onModifyProductButtonClick() {\n}\n\nfunction onAddProductButtonClick() {\n    const nameInput = $('#add-product-name-input');\n    const priceInput = $('#add-product-price-input');\n    const descriptionInput = $('#add-product-description-input');\n    const imageInput = $('#add-product-image-input');\n    const stallID = $('#add-product-stall-id').val();\n\n    let product = {\n        name: nameInput.val(),\n        price: priceInput.val(),\n        description: descriptionInput.val(),\n        image_link: undefined\n    };\n\n    if (imageInput[0].files.length) {\n        const image = imageInput[0].files[0];\n        const form = new FormData();\n        form.append('image', image);\n\n        const uploadToastID = randomString();\n\n        iziToast.info({\n            title: 'Uploading image...',\n            id: uploadToastID,\n            timeout: false\n        });\n\n        $.post({\n            url: 'https://api.imgur.com/3/image',\n            async: true,\n            data: form,\n            contentType: false,\n            processData: false,\n            success: response => {\n                product.image = response.data.link;\n                iziToast.hide({}, document.getElementById(uploadToastID));\n                iziToast.success({\n                    title: 'Uploaded',\n                    message: 'Image has been uploaded.'\n                });\n                submitAddProduct(product, stallID)\n            },\n            error: response => {\n                console.log(response);\n                iziToast.hide({}, document.getElementById(uploadToastID));\n                iziToast.warning({\n                    title: 'Error',\n                    message: 'Unable to upload photo. Using default photo instead.'\n                });\n                submitAddProduct(product, stallID);\n            },\n            beforeSend: xhr => {\n                xhr.setRequestHeader('Authorization', 'Client-ID 715b55f24db9cd2')\n            }\n        });\n\n    } else {\n        submitAddProduct(product, stallID);\n    }\n}\n\nfunction submitAddProduct(product, stallID) {\n    $.ajax({\n        url: `${baseURL}stalls/${stallID}/products/`,\n        method: 'POST',\n        data: product,\n        beforeSend: authorizeXHR,\n        success: () => {\n            iziToast.success({\n                title: 'Added',\n                message: 'Successfully added product'\n            });\n            refreshProducts();\n        },\n        error: response => {\n            console.log(response);\n            iziToast.error({\n                title: 'Error',\n                message: 'Unable to add product'\n            })\n        }\n    });\n}\n\nfunction authorizeXHR(xhr) {\n    xhr.setRequestHeader(\"Authorization\", \"Token \" + localStorage.token)\n}"]}