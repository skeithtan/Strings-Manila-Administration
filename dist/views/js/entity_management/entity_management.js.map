{"version":3,"sources":["../../../../views/js/entity_management/entity_management.js"],"names":["fetchStalls","$","click","stallNameInput","stallName","val","ajax","url","baseURL","type","async","data","name","success","beforeSend","authorizeXHR","xhr","setRequestHeader","localStorage","token","completionHandler","client","query","then","fetchProducts","stallID","EntityManagement","props","state","activeStall","stalls","products","setState","result","setActiveStall","bind","stall","id","productSet","console","log","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEAA;;AAGAC,EAAE,YAAM;AACJA,MAAE,mBAAF,EAAuBC,KAAvB,CAA6B,YAAM;AAC/B,YAAMC,iBAAiBF,EAAE,mBAAF,CAAvB;AACA,YAAMG,YAAYD,eAAeE,GAAf,EAAlB;AACAF,uBAAeE,GAAf,CAAmB,EAAnB;;AAEAJ,UAAEK,IAAF,CAAO;AACHC,iBAAKC,UAAU,SADZ;AAEHC,kBAAM,MAFH;AAGHC,mBAAO,IAHJ;AAIHC,kBAAM;AACFC,sBAAMR;AADJ,aAJH;AAOHS,qBAASb,WAPN;AAQHc,wBAAYC;AART,SAAP;AAUH,KAfD;AAgBH,CAjBD;;AAmBA;AACA,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AACvBA,QAAIC,gBAAJ,CAAqB,eAArB,EAAsC,WAAWC,aAAaC,KAA9D;AACH;;AAED,SAASnB,WAAT,CAAqBoB,iBAArB,EAAwC;AACpCC,WAAOC,KAAP,wFAOGC,IAPH,CAOQH,iBAPR;AAQH;;AAED,SAASI,aAAT,CAAuBC,OAAvB,EAAgCL,iBAAhC,EAAmD;AAC/CC,WAAOC,KAAP,8BAEaG,OAFb,yJAYGF,IAZH,CAYQH,iBAZR;AAaH;;AAED;;IACMM,gB;;;AACF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA,wIACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,yBAAa,IADJ;AAETC,oBAAQ,IAFC;AAGTC,sBAAU;AAHD,SAAb;;AAMA/B,oBAAY,kBAAU;AAClB,kBAAKgC,QAAL,CAAc;AACVF,wBAAQG,OAAOH;AADL,aAAd;AAGH,SAJD;;AAMA,cAAKI,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AAde;AAelB;;;;uCAEcC,K,EAAO;AAAA;;AAClBA,kBAAML,QAAN,GAAiB,IAAjB;;AAEA,iBAAKC,QAAL,CAAc;AACVH,6BAAaO;AADH,aAAd;;AAIAZ,0BAAcY,MAAMC,EAApB,EAAwB,kBAAU;AAC9B,oBAAIR,cAAc,OAAKD,KAAL,CAAWC,WAA7B;AACAA,4BAAYE,QAAZ,GAAuBE,OAAOG,KAAP,CAAaE,UAApC;;AAEAC,wBAAQC,GAAR,CAAYX,WAAZ;;AAEA,uBAAKG,QAAL,CAAc;AACVH,iCAAaA;AADH,iBAAd;AAGH,aATD;AAUH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,IAAG,yBAAR;AACK,+BAAU,qDADf;AAEI,kEAAQ,QAAQ,KAAKD,KAAL,CAAWE,MAA3B;AACQ,iCAAa,KAAKF,KAAL,CAAWC,WADhC;AAEQ,oCAAgB,KAAKK,cAF7B,GAFJ;AAKI,oEAAU,aAAa,KAAKN,KAAL,CAAWC,WAAlC;AALJ,aADJ;AASH;;;;EA/C0B,gBAAMY,S;;kBAkDtBf,gB","file":"entity_management.js","sourcesContent":["import React from 'react';\nimport Stalls from './stalls';\nimport Products from './products';\n\nfetchStalls();\n\n\n$(() => {\n    $('#add-stall-button').click(() => {\n        const stallNameInput = $('#stall-name-input');\n        const stallName = stallNameInput.val();\n        stallNameInput.val('');\n\n        $.ajax({\n            url: baseURL + 'stalls/',\n            type: 'POST',\n            async: true,\n            data: {\n                name: stallName\n            },\n            success: fetchStalls,\n            beforeSend: authorizeXHR\n        });\n    })\n});\n\n//Functions\nfunction authorizeXHR(xhr) {\n    xhr.setRequestHeader(\"Authorization\", \"Token \" + localStorage.token)\n}\n\nfunction fetchStalls(completionHandler) {\n    client.query(`\n    {\n        stalls {\n            id\n            name\n        }\n    }\n    `).then(completionHandler);\n}\n\nfunction fetchProducts(stallID, completionHandler) {\n    client.query(`\n    {\n      stall(id:${stallID}){\n        productSet{\n          id\n          name\n          description\n          photo\n          quantity\n        }\n      }\n    }\n    `).then(completionHandler)\n}\n\n//React\nclass EntityManagement extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeStall: null,\n            stalls: null,\n            products: null\n        };\n\n        fetchStalls(result => {\n            this.setState({\n                stalls: result.stalls\n            })\n        });\n\n        this.setActiveStall = this.setActiveStall.bind(this);\n    }\n\n    setActiveStall(stall) {\n        stall.products = null;\n\n        this.setState({\n            activeStall: stall\n        });\n\n        fetchProducts(stall.id, result => {\n            let activeStall = this.state.activeStall;\n            activeStall.products = result.stall.productSet;\n\n            console.log(activeStall);\n\n            this.setState({\n                activeStall: activeStall\n            })\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"entity-management-frame\"\n                 className=\"container-fluid d-flex flex-row m-0 p-0 h-100 w-100\">\n                <Stalls stalls={this.state.stalls}\n                        activeStall={this.state.activeStall}\n                        setActiveStall={this.setActiveStall}/>\n                <Products activeStall={this.state.activeStall}/>\n            </div>\n        );\n    }\n}\n\nexport default EntityManagement"]}