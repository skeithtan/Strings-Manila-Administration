{"version":3,"sources":["../../../../views/js/reports/order_reports_renderer.js"],"names":["ipc","ipcRenderer","on","event","message","each","index","object","text","dateGenerated","startDate","endDate","orderTableBody","rowClone","remove","orders","forEach","row","clone","order_date","order","date_ordered","_d","format","find","removeAttr","id","total_price","statusString","status","append","statusCode"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,mBAASC,WAArB;;AAEAD,IAAIE,EAAJ,CAAO,SAAP,EAAkB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAClC,0BAAE,iBAAF,EAAqBC,IAArB,CAA0B,UAACC,KAAD,EAAQC,MAAR;AAAA,eAAmB,sBAAEA,MAAF,EAAUC,IAAV,CAAeJ,QAAQK,aAAvB,CAAnB;AAAA,KAA1B;AACA,0BAAE,aAAF,EAAiBJ,IAAjB,CAAsB,UAACC,KAAD,EAAQC,MAAR;AAAA,eAAmB,sBAAEA,MAAF,EAAUC,IAAV,CAAeJ,QAAQM,SAAvB,CAAnB;AAAA,KAAtB;AACA,0BAAE,WAAF,EAAeL,IAAf,CAAoB,UAACC,KAAD,EAAQC,MAAR;AAAA,eAAmB,sBAAEA,MAAF,EAAUC,IAAV,CAAeJ,QAAQO,OAAvB,CAAnB;AAAA,KAApB;;AAEA,QAAMC,iBAAiB,sBAAE,mBAAF,CAAvB;AACA,QAAMC,WAAW,sBAAE,kBAAF,CAAjB;AACAA,aAASC,MAAT;;AAEAV,YAAQW,MAAR,CAAeC,OAAf,CAAuB,iBAAS;AAC5B,YAAMC,MAAMJ,SAASK,KAAT,EAAZ;AACA,YAAMC,aAAa,sBAAOC,MAAMC,YAAN,CAAmBC,EAA1B,EAA8BC,MAA9B,CAAqC,IAArC,CAAnB;;AAEA,8BAAEN,IAAIO,IAAJ,CAAS,mBAAT,EAA8BC,UAA9B,CAAyC,IAAzC,EAA+CjB,IAA/C,CAAoDY,MAAMM,EAA1D,CAAF;AACA,8BAAET,IAAIO,IAAJ,CAAS,kBAAT,EAA6BC,UAA7B,CAAwC,IAAxC,EAA8CjB,IAA9C,CAAmD,MAAMY,MAAMO,WAA/D,CAAF;AACA,8BAAEV,IAAIO,IAAJ,CAAS,iBAAT,CAAF,EAA+BC,UAA/B,CAA0C,IAA1C,EAAgDjB,IAAhD,CAAqDW,UAArD;AACA,8BAAEF,IAAIO,IAAJ,CAAS,mBAAT,EAA8BC,UAA9B,CAAyC,IAAzC,EAA+CjB,IAA/C,CAAoDoB,aAAaR,MAAMS,MAAnB,CAApD,CAAF;;AAEAjB,uBAAekB,MAAf,CAAsBb,GAAtB;AACH,KAVD;AAWH,CApBD;;AAsBA,SAASW,YAAT,CAAsBG,UAAtB,EAAkC;AAC9B,YAAQA,UAAR;AACI,aAAK,GAAL;AACI,mBAAO,QAAP;AACJ,aAAK,GAAL;AACI,mBAAO,mBAAP;AACJ,aAAK,GAAL;AACI,mBAAO,YAAP;AACJ,aAAK,GAAL;AACI,mBAAO,SAAP;AACJ,aAAK,GAAL;AACI,mBAAO,WAAP;AAVR;;AAaA,WAAOA,UAAP;AACH;;AAED,sBAAE,YAAM,CAEP,CAFD","file":"order_reports_renderer.js","sourcesContent":["import electron from 'electron';\nimport moment from 'moment';\nimport $ from 'jquery';\n\nconst ipc = electron.ipcRenderer;\n\nipc.on('message', (event, message) => {\n    $('.date-generated').each((index, object) => $(object).text(message.dateGenerated));\n    $('.start-date').each((index, object) => $(object).text(message.startDate));\n    $('.end-date').each((index, object) => $(object).text(message.endDate));\n\n    const orderTableBody = $('#order-table-body');\n    const rowClone = $('#order-row-clone');\n    rowClone.remove();\n\n    message.orders.forEach(order => {\n        const row = rowClone.clone();\n        const order_date = moment(order.date_ordered._d).format(\"LL\");\n\n        $(row.find('#order-row-number').removeAttr('id').text(order.id));\n        $(row.find('#order-row-total').removeAttr('id').text(\"â‚±\" + order.total_price));\n        $(row.find('#order-row-date')).removeAttr('id').text(order_date);\n        $(row.find('#order-row-status').removeAttr('id').text(statusString(order.status)));\n\n        orderTableBody.append(row);\n    });\n});\n\nfunction statusString(statusCode) {\n    switch (statusCode) {\n        case 'U':\n            return 'Unpaid';\n        case 'V':\n            return 'Verifying Payment';\n        case 'P':\n            return 'Processing';\n        case 'S':\n            return 'Shipped';\n        case 'C':\n            return 'Cancelled';\n    }\n\n    return statusCode;\n}\n\n$(() => {\n\n});"]}