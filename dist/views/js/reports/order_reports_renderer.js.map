{"version":3,"sources":["../../../../views/js/reports/order_reports_renderer.js"],"names":["ipc","ipcRenderer","fillOutClass","className","text","each","index","object","on","event","orders","fetchDate","startDate","statusString","filter","endDate","orderTableBody","rowClone","remove","forEach","row","clone","orderDate","order","date_ordered","_d","format","find","removeAttr","id","total_price","status","append","statusCode"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,mBAASC,WAArB;;AAEA,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,IAAjC,EAAuC;AACnC,0BAAED,SAAF,EAAaE,IAAb,CAAkB,UAACC,KAAD,EAAQC,MAAR;AAAA,eAAmB,sBAAEA,MAAF,EAAUH,IAAV,CAAeA,IAAf,CAAnB;AAAA,KAAlB;AACH;;AAEDJ,IAAIQ,EAAJ,CAAO,SAAP,EAAkB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACjCR,iBAAa,iBAAb,EAAgCQ,OAAOC,SAAvC;AACAT,iBAAa,aAAb,EAA4BQ,OAAOE,SAAnC;AACAV,iBAAa,SAAb,EAAwBW,aAAaH,OAAOI,MAApB,CAAxB;AACAZ,iBAAa,WAAb,EAA0BW,aAAaH,OAAOK,OAApB,CAA1B;;AAEA,QAAMC,iBAAiB,sBAAE,mBAAF,CAAvB;AACA,QAAMC,WAAW,sBAAE,kBAAF,CAAjB;AACAA,aAASC,MAAT;;AAEAR,WAAOA,MAAP,CAAcS,OAAd,CAAsB,iBAAS;AAC3B,YAAMC,MAAMH,SAASI,KAAT,EAAZ;AACA,YAAMC,YAAY,sBAAOC,MAAMC,YAAN,CAAmBC,EAA1B,EAA8BC,MAA9B,CAAqC,IAArC,CAAlB;;AAEA,8BAAEN,IAAIO,IAAJ,CAAS,mBAAT,EAA8BC,UAA9B,CAAyC,IAAzC,EAA+CxB,IAA/C,CAAoDmB,MAAMM,EAA1D,CAAF;AACA,8BAAET,IAAIO,IAAJ,CAAS,kBAAT,EAA6BC,UAA7B,CAAwC,IAAxC,EAA8CxB,IAA9C,CAAmD,MAAMmB,MAAMO,WAA/D,CAAF;AACA,8BAAEV,IAAIO,IAAJ,CAAS,iBAAT,CAAF,EAA+BC,UAA/B,CAA0C,IAA1C,EAAgDxB,IAAhD,CAAqDkB,SAArD;AACA,8BAAEF,IAAIO,IAAJ,CAAS,mBAAT,EAA8BC,UAA9B,CAAyC,IAAzC,EAA+CxB,IAA/C,CAAoDS,aAAaU,MAAMQ,MAAnB,CAApD,CAAF;;AAEAf,uBAAegB,MAAf,CAAsBZ,GAAtB;AACH,KAVD;AAWH,CArBD;;AAuBA,SAASP,YAAT,CAAsBoB,UAAtB,EAAkC;AAC9B,YAAQA,UAAR;AACI,aAAK,GAAL;AACI,mBAAO,QAAP;AACJ,aAAK,GAAL;AACI,mBAAO,mBAAP;AACJ,aAAK,GAAL;AACI,mBAAO,YAAP;AACJ,aAAK,GAAL;AACI,mBAAO,SAAP;AACJ,aAAK,GAAL;AACI,mBAAO,WAAP;AACJ,aAAK,IAAL;AACI,mBAAO,MAAP;AAZR;;AAeA,WAAOA,UAAP;AACH","file":"order_reports_renderer.js","sourcesContent":["import electron from 'electron';\nimport moment from 'moment';\nimport $ from 'jquery';\n\nconst ipc = electron.ipcRenderer;\n\nfunction fillOutClass(className, text) {\n    $(className).each((index, object) => $(object).text(text));\n}\n\nipc.on('message', (event, orders) => {\n    fillOutClass('.date-generated', orders.fetchDate);\n    fillOutClass('.start-date', orders.startDate);\n    fillOutClass('.filter', statusString(orders.filter));\n    fillOutClass('.end-date', statusString(orders.endDate));\n\n    const orderTableBody = $('#order-table-body');\n    const rowClone = $('#order-row-clone');\n    rowClone.remove();\n\n    orders.orders.forEach(order => {\n        const row = rowClone.clone();\n        const orderDate = moment(order.date_ordered._d).format(\"LL\");\n\n        $(row.find('#order-row-number').removeAttr('id').text(order.id));\n        $(row.find('#order-row-total').removeAttr('id').text(\"â‚±\" + order.total_price));\n        $(row.find('#order-row-date')).removeAttr('id').text(orderDate);\n        $(row.find('#order-row-status').removeAttr('id').text(statusString(order.status)));\n\n        orderTableBody.append(row);\n    });\n});\n\nfunction statusString(statusCode) {\n    switch (statusCode) {\n        case 'U':\n            return 'Unpaid';\n        case 'V':\n            return 'Verifying Payment';\n        case 'P':\n            return 'Processing';\n        case 'S':\n            return 'Shipped';\n        case 'C':\n            return 'Cancelled';\n        case null:\n            return 'None';\n    }\n\n    return statusCode;\n}"]}