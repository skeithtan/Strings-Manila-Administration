{"version":3,"sources":["../../../views/js/random.js"],"names":["randomString","replace","c","crypto","getRandomValues","Uint8Array","toString"],"mappings":";;;;;AAAA;AACA,SAASA,YAAT,GAAwB;AACpB;AACA,WAAO,CAAC,CAAC,GAAD,IAAQ,CAAC,GAAT,GAAe,CAAC,GAAhB,GAAsB,CAAC,GAAvB,GAA6B,CAAC,IAA/B,EAAqCC,OAArC,CAA6C,QAA7C,EAAuD;AAAA,eAC1D,CAACC,IAAIC,OAAOC,eAAP,CAAuB,IAAIC,UAAJ,CAAe,CAAf,CAAvB,EAA0C,CAA1C,IAA+C,MAAMH,IAAI,CAA9D,EAAiEI,QAAjE,CAA0E,EAA1E,CAD0D;AAAA,KAAvD,CAAP;AAGH;;kBAEcN,Y","file":"random.js","sourcesContent":["//MARK: - Random String Generator\nfunction randomString() {\n    // Random string with very little collision possibility\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    )\n}\n\nexport default randomString;"]}