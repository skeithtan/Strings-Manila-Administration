{"version":3,"sources":["../../../views/js/entity_management.js"],"names":["stalls","activeStallId","fetchStalls","$","click","stallName","val","ajax","url","baseURL","type","async","data","name","success","beforeSend","authorizeXHR","xhr","setRequestHeader","localStorage","token","console","log","client","query","then","result","renderStallList","StallList","emptyState","length","stallItems","map","stall","id","StallItem","props","stallID","className","handleClick","Component","render","document","getElementById"],"mappings":";;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAIA,SAAS,EAAb;AACA,IAAIC,gBAAgB,IAApB;;AAGAC;;AAEAC,EAAE,YAAM;AACJA,MAAE,mBAAF,EAAuBC,KAAvB,CAA6B,YAAM;AAC/B,YAAMC,YAAYF,EAAE,mBAAF,EAAuBG,GAAvB,EAAlB;AACAH,UAAEI,IAAF,CAAO;AACHC,iBAAKC,UAAU,SADZ;AAEHC,kBAAM,MAFH;AAGHC,mBAAO,IAHJ;AAIHC,kBAAM;AACJC,sBAAMR;AADF,aAJH;AAOHS,qBAASZ,WAPN;AAQHa,wBAAYC;AART,SAAP;AAUH,KAZD;AAaH,CAdD;;AAgBA;AACA,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AACvBA,QAAIC,gBAAJ,CAAqB,eAArB,EAAsC,WAAWC,aAAaC,KAA9D;AACH;;AAED,SAASlB,WAAT,GAAuB;AACnBmB,YAAQC,GAAR,CAAY,iBAAZ;AACAC,WAAOC,KAAP,wFAOGC,IAPH,CAOQ,kBAAU;AACdzB,iBAAS0B,OAAO1B,MAAhB;AACA2B;AACH,KAVD;AAWH;;AAED;AACA,SAASC,SAAT,GAAqB;AACjB,QAAMC,aACF;AAAA;AAAA,UAAK,WAAU,6GAAf;AACI;AAAA;AAAA;AAAA;AAAA,SADJ;AAEI;AAAA;AAAA,cAAG,WAAU,YAAb;AAAA;AAAA,SAFJ;AAGI;AAAA;AAAA,cAAQ,WAAU,yBAAlB;AAAA;AAAA;AAHJ,KADJ;;AAQA,QAAI7B,OAAO8B,MAAP,GAAgB,CAApB,EAAuB;AACnB,YAAMC,aACF/B,OAAOgC,GAAP,CAAW,iBAAS;AAChB,mBAAO,8BAAC,SAAD,IAAW,OAAOC,KAAlB;AACW,qBAAKA,MAAMC,EADtB,GAAP;AAEH,SAHD,CADJ;;AAMA,eACI;AAAA;AAAA,cAAI,IAAG,YAAP;AACI,2BAAU,qBADd;AAEKH;AAFL,SADJ;AAMH,KAbD,MAaO;AACH,eAAOF,UAAP;AACH;AACJ;;IAEKM,S;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,qHACTA,KADS;AAElB;;;;oCAEWC,O,EAAS;AACjBpC,4BAAgBoC,OAAhB;AACAV;AACH;;;iCAEQ;AAAA;;AACL,gBAAMM,QAAQ,KAAKG,KAAL,CAAWH,KAAzB;AACA,gBAAMK,YAAYL,MAAMC,EAAN,KAAajC,aAAb,GAA6B,wBAA7B,GAAwD,iBAA1E;AACA,mBAAO;AAAA;AAAA,kBAAI,WAAWqC,SAAf;AACI,6BAAS,mBAAM;AACX,+BAAKC,WAAL,CAAiBN,MAAMC,EAAvB;AACH,qBAHL;AAGQD,sBAAMpB;AAHd,aAAP;AAIH;;;;EAjBmB,gBAAM2B,S;;AAoB9B,SAASb,eAAT,GAA2B;AACvB,uBAASc,MAAT,CACI,8BAAC,SAAD,OADJ,EAEIC,SAASC,cAAT,CAAwB,sBAAxB,CAFJ;AAIH;;AAEDhB","file":"entity_management.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nlet stalls = [];\nvar activeStallId = null;\n\n\nfetchStalls();\n\n$(() => {\n    $('#add-stall-button').click(() => {\n        const stallName = $('#stall-name-input').val();\n        $.ajax({\n            url: baseURL + 'stalls/',\n            type: 'POST',\n            async: true,\n            data: {\n              name: stallName\n            },\n            success: fetchStalls,\n            beforeSend: authorizeXHR\n        });\n    })\n});\n\n//Functions\nfunction authorizeXHR(xhr) {\n    xhr.setRequestHeader(\"Authorization\", \"Token \" + localStorage.token)\n}\n\nfunction fetchStalls() {\n    console.log(\"Fetching Stalls\");\n    client.query(`\n    {\n        stalls {\n            id\n            name\n        }\n    }\n    `).then(result => {\n        stalls = result.stalls;\n        renderStallList();\n    });\n}\n\n//React\nfunction StallList() {\n    const emptyState =\n        <div className=\"container-fluid p-2 text-center bg-white h-100 d-flex flex-column justify-content-center align-items-center\">\n            <h5>There are no stalls yet.</h5>\n            <p className=\"text-muted\">Stalls added will show up here.</p>\n            <button className=\"btn btn-outline-primary\">Add a stall</button>\n        </div>;\n\n\n    if (stalls.length > 0) {\n        const stallItems =\n            stalls.map(stall => {\n                return <StallItem stall={stall}\n                                  key={stall.id}/>\n            });\n\n        return (\n            <ul id=\"stall-list\"\n                className=\"list-group bg-faded\">\n                {stallItems}\n            </ul>\n        )\n    } else {\n        return emptyState;\n    }\n}\n\nclass StallItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick(stallID) {\n        activeStallId = stallID;\n        renderStallList()\n    }\n\n    render() {\n        const stall = this.props.stall;\n        const className = stall.id === activeStallId ? \"list-group-item active\" : \"list-group-item\";\n        return <li className={className}\n                   onClick={() => {\n                       this.handleClick(stall.id)\n                   }}>{stall.name}</li>;\n    }\n}\n\nfunction renderStallList() {\n    ReactDOM.render(\n        <StallList/>,\n        document.getElementById('stall-list-container')\n    );\n}\n\nrenderStallList();\n"]}