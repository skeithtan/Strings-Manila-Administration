{"version":3,"sources":["../../../views/js/entity_management.js"],"names":["data","stalls","activeStallID","fetchStalls","client","query","then","result","renderStallList","addStall","StallList","emptyState","length","stallItems","map","stall","id","StallItem","props","stallID","className","handleClick","name","Component","render","document","getElementById"],"mappings":";;;;AAAA;;;;AACA;;;;;;;;;;;;AAEAA,KAAKC,MAAL,GAAc,EAAd;AACAD,KAAKE,aAAL,GAAqB,IAArB;;AAEAC;;AAEA;AACA,SAASA,WAAT,GAAuB;AACnBC,WAAOC,KAAP,wFAOGC,IAPH,CAOQ,kBAAU;AACdN,aAAKC,MAAL,GAAcM,OAAON,MAArB;AACAO;AACH,KAVD;AAWH;;AAED,SAASC,QAAT,GAAoB,CAEnB;;AAGD;AACA,SAASC,SAAT,GAAqB;;AAEjB,QAAMC,aACF;AAAA;AAAA,UAAK,WAAU,6GAAf;AACI;AAAA;AAAA;AAAA;AAAA,SADJ;AAEI;AAAA;AAAA,cAAG,WAAU,YAAb;AAAA;AAAA,SAFJ;AAGI;AAAA;AAAA,cAAQ,WAAU,yBAAlB;AAAA;AAAA;AAHJ,KADJ;;AAQA,QAAIX,KAAKC,MAAL,CAAYW,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,YAAMC,aACFb,KAAKC,MAAL,CAAYa,GAAZ,CAAgB,iBAAS;AACrB,mBAAO,8BAAC,SAAD,IAAW,OAAOC,KAAlB;AACW,qBAAKA,MAAMC,EADtB,GAAP;AAEH,SAHD,CADJ;;AAMA,eACI;AAAA;AAAA,cAAI,IAAG,YAAP;AACI,2BAAU,qBADd;AAEKH;AAFL,SADJ;AAMH,KAbD,MAaO;AACH,eAAOF,UAAP;AACH;AACJ;;IAEKM,S;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,qHACTA,KADS;AAElB;;;;oCAEWC,O,EAAS;AACjBnB,iBAAKE,aAAL,GAAqBiB,OAArB;AACAX;AACH;;;iCAEQ;AAAA;;AACL,gBAAMO,QAAQ,KAAKG,KAAL,CAAWH,KAAzB;AACA,gBAAMK,YAAYL,MAAMC,EAAN,KAAahB,KAAKE,aAAlB,GAAkC,wBAAlC,GAA6D,iBAA/E;AACA,mBAAO;AAAA;AAAA,kBAAI,WAAWkB,SAAf;AACI,6BAAS,mBAAM;AACX,+BAAKC,WAAL,CAAiBN,MAAMC,EAAvB;AACH,qBAHL;AAGQD,sBAAMO;AAHd,aAAP;AAIH;;;;EAjBmB,gBAAMC,S;;AAoB9B,SAASf,eAAT,GAA2B;AACvB,uBAASgB,MAAT,CACI,8BAAC,SAAD,OADJ,EAEIC,SAASC,cAAT,CAAwB,sBAAxB,CAFJ;AAIH;;AAEDlB","file":"entity_management.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\ndata.stalls = [];\ndata.activeStallID = null;\n\nfetchStalls();\n\n//Functions\nfunction fetchStalls() {\n    client.query(`\n    {\n        stalls {\n            id\n            name\n        }\n    }\n    `).then(result => {\n        data.stalls = result.stalls;\n        renderStallList();\n    });\n}\n\nfunction addStall() {\n\n}\n\n\n//React\nfunction StallList() {\n\n    const emptyState =\n        <div className=\"container-fluid p-2 text-center bg-white h-100 d-flex flex-column justify-content-center align-items-center\">\n            <h5>There are no stalls yet.</h5>\n            <p className=\"text-muted\">Stalls added will show up here.</p>\n            <button className=\"btn btn-outline-primary\">Add a stall</button>\n        </div>;\n\n\n    if (data.stalls.length > 0) {\n        const stallItems =\n            data.stalls.map(stall => {\n                return <StallItem stall={stall}\n                                  key={stall.id}/>\n            });\n\n        return (\n            <ul id=\"stall-list\"\n                className=\"list-group bg-faded\">\n                {stallItems}\n            </ul>\n        )\n    } else {\n        return emptyState;\n    }\n}\n\nclass StallItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick(stallID) {\n        data.activeStallID = stallID;\n        renderStallList()\n    }\n\n    render() {\n        const stall = this.props.stall;\n        const className = stall.id === data.activeStallID ? \"list-group-item active\" : \"list-group-item\";\n        return <li className={className}\n                   onClick={() => {\n                       this.handleClick(stall.id)\n                   }}>{stall.name}</li>;\n    }\n}\n\nfunction renderStallList() {\n    ReactDOM.render(\n        <StallList/>,\n        document.getElementById('stall-list-container')\n    );\n}\n\nrenderStallList();\n"]}