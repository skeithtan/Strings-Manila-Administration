{"version":3,"sources":["../../../views/js/settings.js"],"names":["fetchSettings","completionHandler","$","get","url","baseURL","dataType","beforeSend","success","error","console","log","response","Settings","props","state","result","setState","onMaintenance","on_maintenance","currentUser","current_user","setMaintenanceMode","bind","onSuccess","post","xhr","setRequestHeader","localStorage","token","Component","SettingsHead","SettingsBody","settings","heading","description","headingClass","onToggle","width","signOut","clear","window","location","loadingState","maintenanceToggle","overflow","currentUserActions"],"mappings":"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","file":"settings.js","sourcesContent":["import React from 'react';\nimport {authorizeXHR} from \"./modals\";\n\n// Fetch Data\nfunction fetchSettings(completionHandler) {\n    $.get({\n        url: `${baseURL}/api/settings/overview`,\n        dataType: 'json',\n        beforeSend: authorizeXHR,\n        success: completionHandler,\n        error: response => console.log(response)\n    });\n}\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = null;\n\n        fetchSettings(result => {\n            console.log(result);\n            this.setState({\n                onMaintenance: result.on_maintenance,\n                currentUser: result.current_user\n            });\n        });\n\n        this.setMaintenanceMode = this.setMaintenanceMode.bind(this);\n    }\n\n    setMaintenanceMode(onMaintenance) {\n        const url = `${baseURL}/api/settings/maintenance-mode/${onMaintenance ? \"enable\" : \"disable\"}/`;\n        const onSuccess = () => this.setState({\n            onMaintenance: onMaintenance\n        });\n\n        $.post({\n            url: url,\n            beforeSend: xhr => xhr.setRequestHeader(\"Authorization\", \"Token \" + localStorage.token),\n            success: onSuccess,\n            error: response => console.log(response),\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <SettingsHead/>\n                <SettingsBody settings={this.state}\n                              setMaintenanceMode={this.setMaintenanceMode}/>\n            </div>\n        );\n    }\n}\n\nclass SettingsHead extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid row ml-auto mr-auto bg-light page-head\">\n                <div id=\"settings-title-wrapper\">\n                    <h4 className=\"pt-5 pl-5 mb-0\">Settings</h4>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass SettingsBody extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    static loadingState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100\">\n                <h3>Loading...</h3>\n            </div>\n        );\n    }\n\n    maintenanceToggle() {\n        const onMaintenance = this.props.settings.onMaintenance;\n        const heading = onMaintenance ? \"Store is on maintenance mode\" : \"Store is online\";\n        const description = onMaintenance ? \"Customers currently cannot view or purchase products. Toggling this will set the store online.\" : \"Customers can currently view and purchase products. Toggling this will set the store to maintenance mode.\";\n        const headingClass = onMaintenance ? \"setting-name text-warning\" : \"setting-name text-success\";\n\n        const onToggle = () => this.props.setMaintenanceMode(!onMaintenance); // Inverse of current value\n\n        return (\n            <div className=\"setting-row d-flex flex-row align-items-center\">\n                <div className=\"mr-auto\">\n                    <h5 className={headingClass}>{heading}</h5>\n                    <p className=\"text-muted setting-description\">{description}</p>\n                </div>\n                <div className=\"ml-5\"\n                     style={{width: \"100px\",}}>\n                    <div className=\"toggle\">\n                        <input type=\"checkbox\"\n                               name=\"checkbox1\"\n                               id=\"checkbox1\"\n                               className=\"ios-toggle\"\n                               defaultChecked={!onMaintenance}\n                               onChange={onToggle}/>\n                        <label htmlFor=\"checkbox1\"\n                               className=\"checkbox-label\"\n                               data-off=\"offline\"\n                               data-on=\"online\"> </label>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    currentUserActions() {\n        function signOut() {\n            localStorage.clear();\n            window.location = '../templates/sign-in.html';\n        }\n\n        return (\n            <div className=\"setting-row\">\n                <div className=\"d-flex flex-row align-items-center\">\n                    <h5 className=\"mr-auto mb-0\">Signed in as {this.props.settings.currentUser}</h5>\n                    <button className=\"btn btn-outline-primary\" onClick={signOut}>Sign out</button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.props.settings === null) {\n            return SettingsBody.loadingState();\n        }\n\n        return (\n            <div id=\"settings-body\"\n                 className=\"page-content pl-5 pr-5 pt-2 pb-3\">\n                <div id=\"settings-list\">\n                    {this.maintenanceToggle()}\n                    <div className=\"setting-row\">\n                        <div className=\"d-flex flex-row w-100 mb-4 align-items-center\">\n                            <h5 className=\"setting-name mr-auto mb-0\">Bank Deposit Payment Accounts</h5>\n                            <button className=\"btn btn-outline-primary\">Add</button>\n                        </div>\n                        <table className=\"table table-hover bg-light rounded\"\n                               style={{overflow: \"hidden\"}}>\n                            <thead>\n                            <tr>\n                                <th>Bank name</th>\n                                <th>Account holder name</th>\n                                <th>Account number</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <th>BPI</th>\n                                <td>Paulina Ramos</td>\n                                <td>9182391823619</td>\n                            </tr>\n                            <tr>\n                                <th>BDO</th>\n                                <td>Paulina Ramos</td>\n                                <td>9182391823619</td>\n                            </tr>\n                            <tr>\n                                <th>Allied Bank</th>\n                                <td>Paulina Ramos</td>\n                                <td>9182391823619</td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    {this.currentUserActions()}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Settings;"]}