{"version":3,"sources":["../../../views/js/settings.js"],"names":["fetchSettings","completionHandler","get","url","baseURL","beforeSend","success","error","console","log","response","Settings","props","state","setMaintenanceMode","bind","refreshSettings","result","setState","accounts","onMaintenance","on_maintenance","currentUser","current_user","onSuccess","post","xhr","setRequestHeader","localStorage","token","Component","SettingsHead","SettingsBody","maintenanceToggle","currentUserActions","bankDepositAccounts","settings","heading","description","headingClass","onToggle","enabledToggle","width","disabledToggle","opacity","noAccounts","length","signOut","clear","window","location","loadingState","BankAccountsTable","map","account","id","emptyState","overflow","rows","BankAccountRow","bank_name","account_holder_name","account_number"],"mappings":"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","file":"settings.js","sourcesContent":["import $ from \"jquery\";\nimport React from \"react\";\nimport {authorizeXHR} from \"./modals\";\n\n// Fetch Data\nfunction fetchSettings(completionHandler) {\n    $.get({\n        url: `${baseURL}/api/settings/overview`,\n        beforeSend: authorizeXHR,\n        success: completionHandler,\n        error: response => console.log(response)\n    });\n}\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = null;\n        this.setMaintenanceMode = this.setMaintenanceMode.bind(this);\n\n        refreshSettings = () => fetchSettings(result => {\n            console.log(result);\n            this.setState({\n                accounts: result.accounts,\n                onMaintenance: result.on_maintenance,\n                currentUser: result.current_user\n            });\n        });\n\n        refreshSettings();\n    }\n\n    setMaintenanceMode(onMaintenance) {\n        const url = `${baseURL}/api/settings/maintenance-mode/${onMaintenance ? \"enable\" : \"disable\"}/`;\n        const onSuccess = () => this.setState({\n            onMaintenance: onMaintenance\n        });\n\n        $.post({\n            url: url,\n            beforeSend: xhr => xhr.setRequestHeader(\"Authorization\", \"Token \" + localStorage.token),\n            success: onSuccess,\n            error: response => console.log(response),\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <SettingsHead/>\n                <SettingsBody settings={this.state}\n                              setMaintenanceMode={this.setMaintenanceMode}/>\n            </div>\n        );\n    }\n}\n\nclass SettingsHead extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid row ml-auto mr-auto bg-light page-head\">\n                <div id=\"settings-title-wrapper\">\n                    <h4 className=\"pt-5 pl-5 mb-0\">Settings</h4>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass SettingsBody extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.maintenanceToggle = this.maintenanceToggle.bind(this);\n        this.currentUserActions = this.currentUserActions.bind(this);\n        this.bankDepositAccounts = this.bankDepositAccounts.bind(this);\n    }\n\n    static loadingState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100\">\n                <h3>Loading...</h3>\n            </div>\n        );\n    }\n\n\n    maintenanceToggle() {\n        const onMaintenance = this.props.settings.onMaintenance;\n        const heading = onMaintenance ? \"Store is on maintenance mode\" : \"Store is online\";\n        const description = onMaintenance ? \"Customers currently cannot view or purchase products. Toggling this will set the store online.\" : \"Customers can currently view and purchase products. Toggling this will set the store to maintenance mode.\";\n        const headingClass = onMaintenance ? \"setting-name text-warning\" : \"setting-name text-success\";\n\n        const onToggle = () => this.props.setMaintenanceMode(!onMaintenance); // Inverse of current value\n\n        // Toggle when you can turn maintenance mode on and off\n        function enabledToggle() {\n            return (\n                <div className=\"setting-row d-flex flex-row align-items-center\">\n                    <div className=\"mr-auto\">\n                        <h5 className={headingClass}>{heading}</h5>\n                        <p className=\"text-muted setting-description\">{description}</p>\n                    </div>\n                    <div className=\"ml-5\"\n                         style={{width: \"100px\",}}>\n                        <div className=\"toggle ml-5\">\n                            <input type=\"checkbox\"\n                                   name=\"checkbox1\"\n                                   id=\"checkbox1\"\n                                   className=\"ios-toggle\"\n                                   defaultChecked={!onMaintenance}\n                                   onChange={onToggle}/>\n                            <label htmlFor=\"checkbox1\"\n                                   className=\"checkbox-label\"\n                                   data-off=\"offline\"\n                                   data-on=\"online\"> </label>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        // Dummy toggle when you can't flip the switch because of a reason (possibly because there are no bank accounts)\n        function disabledToggle() {\n            return (\n                <div className=\"setting-row d-flex flex-row align-items-center\">\n                    <div className=\"mr-auto\">\n                        <h5 className={headingClass}>{heading}</h5>\n                        <p className=\"text-muted setting-description\">Customers currently cannot view or purchase\n                            products.\n                            You cannot set the store online until at least one payment method is present.</p>\n                    </div>\n                    <div className=\"ml-5\"\n                         style={{width: \"100px\", opacity: 0.7}}>\n                        <div className=\"toggle ml-5\">\n                            <input type=\"checkbox\"\n                                   name=\"checkbox1\"\n                                   id=\"checkbox1\"\n                                   className=\"ios-toggle\"\n                                   disabled/>\n                            <label htmlFor=\"checkbox1\"\n                                   className=\"checkbox-label\"\n                                   data-off=\"offline\"\n                                   data-on=\"online\"> </label>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        const noAccounts = this.props.settings.accounts.length === 0;\n        return noAccounts ? disabledToggle() : enabledToggle();\n    }\n\n    currentUserActions() {\n        function signOut() {\n            localStorage.clear();\n            window.location = '../templates/sign-in.html';\n        }\n\n        return (\n            <div className=\"setting-row\">\n                <div className=\"d-flex flex-row align-items-center\">\n                    <h5 className=\"mr-auto mb-0\">Signed in as {this.props.settings.currentUser}</h5>\n                    <button className=\"btn btn-outline-primary\"\n                            onClick={signOut}>Sign out\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    bankDepositAccounts() {\n        return (\n            <div className=\"setting-row\">\n                <div className=\"d-flex flex-row w-100 mb-4 align-items-center\">\n                    <h5 className=\"setting-name mr-auto mb-0\">Bank Deposit Payment Accounts</h5>\n                    <button className=\"btn btn-outline-primary\"\n                            data-toggle=\"modal\"\n                            data-target=\"#add-bank-account-modal\">Add\n                    </button>\n                </div>\n                <BankAccountsTable accounts={this.props.settings.accounts}/>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.props.settings === null) {\n            return SettingsBody.loadingState();\n        }\n\n        return (\n            <div id=\"settings-body\"\n                 className=\"page-content pl-5 pr-5 pt-2 pb-3\">\n                <div id=\"settings-list\">\n                    {this.maintenanceToggle()}\n                    {this.bankDepositAccounts()}\n                    {this.currentUserActions()}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass BankAccountsTable extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    static emptyState() {\n        return (\n            <div className=\"p-5 alert alert-danger rounded d-flex flex-column align-items-center justify-content-center text-center\">\n                <h4>There's nothing here.</h4>\n                <p className=\"col-6 mb-4\">Customers will not be able send payments without an account to deposit to.</p>\n                <button className=\"btn btn-danger\"\n                        data-toggle=\"modal\"\n                        data-target=\"#add-bank-account-modal\">Add a bank account\n                </button>\n            </div>\n        )\n    }\n\n    rows() {\n        return this.props.accounts.map(account => {\n            return <BankAccountRow key={account.id} account={account}/>\n        });\n    }\n\n    render() {\n        if (this.props.accounts.length === 0) {\n            return BankAccountsTable.emptyState();\n        }\n\n        return (\n            <table className=\"table table-hover bg-light rounded\"\n                   style={{overflow: \"hidden\"}}>\n                <thead>\n                <tr>\n                    <th>Bank name</th>\n                    <th>Account holder name</th>\n                    <th>Account number</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.rows()}\n                </tbody>\n            </table>\n        )\n    }\n}\n\nclass BankAccountRow extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        //TODO: Onclick\n        return (\n            <tr>\n                <th>{this.props.account.bank_name}</th>\n                <td>{this.props.account.account_holder_name}</td>\n                <td>{this.props.account.account_number}</td>\n            </tr>\n        );\n    }\n}\n\nexport default Settings;"]}