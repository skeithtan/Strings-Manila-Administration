{"version":3,"sources":["../../../views/js/orders.js"],"names":["fetchOrders","object","get","url","baseURL","beforeSend","authorizeXHR","data","startDate","endDate","success","completionHandler","error","console","log","response","xhr","setRequestHeader","localStorage","token","Orders","props","dateToday","dateLastWeek","subtract","state","orders","statusFilter","dates","onDateChange","bind","refreshState","filteredOrders","onStatusFilterChange","onRefreshButtonClick","refreshOrders","setState","toDate","dateString","status","toastID","formatDate","date","format","result","map","order","date_ordered","toast","document","getElementById","iziToast","hide","title","message","timeout","progressBar","filter","info","id","Component","OrderHead","event","isStartDate","value","target","refreshData","OrderTable","rows","loadingState","length","emptyState","hasFilter","OrderRow","rowClass","onOrderRowClick","total_price","OrderTableFooter","statistics","totalItems","totalForStatus","statusCode","totalUnpaid","totalProcessing","totalShipped","totalCancelled"],"mappings":"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","file":"orders.js","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport randomString from './random';\nimport {fillOutOrderModal} from \"./modals\";\n\n// Fetch data\nfunction fetchOrders(object) {\n    $.get({\n        url: `${baseURL}/api/orders/`,\n        beforeSend: authorizeXHR,\n        data: {\n            \"start-date\": object.startDate,\n            \"end-date\": object.endDate\n        },\n        success: object.completionHandler,\n        error: response => console.log(response)\n    });\n}\n\nfunction authorizeXHR(xhr) {\n    xhr.setRequestHeader(\"Authorization\", `Token ${localStorage.token}`);\n}\n\n// React\nclass Orders extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const dateToday = moment();\n        const dateLastWeek = moment().subtract(7, 'days');\n\n        this.state = {\n            orders: null,\n            statusFilter: null,\n            dates: {\n                startDate: dateLastWeek,\n                endDate: dateToday,\n            }\n        };\n\n        this.onDateChange = this.onDateChange.bind(this);\n        this.refreshState = this.refreshState.bind(this);\n        this.filteredOrders = this.filteredOrders.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n        this.onRefreshButtonClick = this.onRefreshButtonClick.bind(this);\n        refreshOrders = this.refreshState;\n\n        this.refreshState();\n    }\n\n    onDateChange(dates) {\n        this.setState({orders: null});\n\n        function toDate(dateString) {\n            return moment(dateString, 'YYYY-MM-DD')\n        }\n\n        dates.startDate = toDate(dates.startDate);\n        dates.endDate = toDate(dates.endDate);\n\n        this.state.dates = dates;\n        this.refreshState();\n    }\n\n    onStatusFilterChange(status) {\n        this.setState({\n            statusFilter: status\n        })\n    }\n\n    refreshState(toastID = false) {\n        function formatDate(date) {\n            return date.format('YYYY-MM-DD');\n        }\n\n        const startDate = formatDate(this.state.dates.startDate);\n        const endDate = formatDate(this.state.dates.endDate);\n\n        fetchOrders({\n            startDate: startDate,\n            endDate: endDate,\n            completionHandler: result => {\n                //TODO: Sort by date\n\n                const orders = result.map(order => {\n                    order.date_ordered = moment(order.date_ordered);\n                    return order;\n                });\n\n                this.setState({\n                    orders: orders\n                });\n\n                if (toastID) {\n                    const toast = document.getElementById(toastID);\n                    iziToast.hide({}, toast);\n\n                    iziToast.success({\n                        title: \"Refreshed\",\n                        message: \"Data is up to date.\",\n                        timeout: 2500,\n                        progressBar: false\n                    })\n                }\n            }\n        })\n    }\n\n    filteredOrders() {\n        const statusFilter = this.state.statusFilter;\n\n        const orders = this.state.orders;\n\n        if (statusFilter === null) {\n            return orders;\n        }\n\n        return orders.filter(order => order.status === statusFilter);\n    }\n\n    onRefreshButtonClick() {\n        const toastID = randomString();\n\n        iziToast.info({\n            title: \"Fetching updates...\",\n            progressBar: false,\n            timeout: false,\n            id: toastID\n        });\n\n        this.refreshState(toastID);\n    }\n\n    render() {\n        const filteredOrders = this.filteredOrders();\n\n        return (\n            <div id=\"orders\"\n                 className=\"container-fluid m-0 p-0 h-100 w-100 d-flex flex-column\">\n                <OrderHead dates={this.state.dates}\n                           refreshData={this.onRefreshButtonClick}\n                           onDateChange={this.onDateChange}\n                           onStatusFilterChange={this.onStatusFilterChange}\n                />\n                <OrderTable orders={filteredOrders}\n                            hasFilter={this.state.statusFilter !== null} />\n            </div>\n        );\n    }\n}\n\nclass OrderHead extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n\n    onDateChange(event, isStartDate) {\n        const value = event.target.value;\n\n        if (isStartDate) {\n            this.props.onDateChange({\n                startDate: value,\n                endDate: endDate\n            })\n        } else {\n            this.props.onDateChange({\n                startDate: startDate,\n                endDate: value\n            })\n        }\n    }\n\n    render() {\n        function formatDate(date) {\n            return date.format('YYYY-MM-DD');\n        }\n\n        const startDate = formatDate(this.props.dates.startDate);\n        const endDate = formatDate(this.props.dates.endDate);\n\n        return (\n            <div className=\"container-fluid row ml-auto mr-auto bg-light page-head\">\n                <div className=\"mr-auto row p-3 pt-5 mt-auto\">\n                    <h4 className=\"mr-3\">Orders</h4>\n                    <div>\n                        <button className=\"btn btn-sm btn-outline-primary mr-1\"\n                                onClick={this.props.refreshData}>Refresh Data\n                        </button>\n                        <button className=\"btn btn-sm btn-outline-primary\">Generate Report</button>\n                    </div>\n                </div>\n\n                <div className=\"row pl-3 pb-3 mr-3\">\n                    <div className=\"mt-auto mr-2\">\n                        <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">Status filter</small>\n                        <div className=\"btn-group\"\n                             data-toggle=\"buttons\">\n                            <label className=\"btn btn-outline-secondary active\"\n                                   onClick={() => this.props.onStatusFilterChange(null)}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>All\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('U')}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Unpaid\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('V')}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Verifying Payment\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('P')}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Processing\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('S')}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Shipped\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('C')}>\n                                <input type=\"radio\"\n                                       name=\"options\"\n                                       autoComplete=\"off\"/>Cancelled\n                            </label>\n                        </div>\n                    </div>\n                    <div className=\"mt-auto ml-2 row \">\n                        <div className=\"mr-2\">\n                            <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">Start Date</small>\n                            <div className=\"input-group\">\n                                <input className=\"form-control\"\n                                       type=\"date\"\n                                       placeholder=\"Start Date\"\n                                       value={startDate}\n                                       onChange={event => this.onDateChange(event, true)}/>\n                            </div>\n                        </div>\n                        <div className=\"mr-2\">\n                            <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">End Date</small>\n                            <div className=\"input-group mb-2 mb-sm-0\">\n                                <div className=\"input-group\">\n                                    <input className=\"form-control\"\n                                           type=\"date\"\n                                           placeholder=\"End Date\"\n                                           value={endDate}\n                                           onChange={event => this.onDateChange(event, false)}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass OrderTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.rows = this.rows.bind(this);\n    }\n\n    static emptyState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100 bg-light\">\n                <h3>There's nothing here.</h3>\n                <p className=\"text-muted\">Refine your filters and try again.</p>\n            </div>\n        )\n    }\n\n    static loadingState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100\">\n                <h3>Loading...</h3>\n            </div>\n        );\n    }\n\n    rows() {\n        return this.props.orders.map(order => <OrderRow key={order.id}\n                                                        order={order}\n                                                        onOrderRowClick={() => fillOutOrderModal(order.id)}/>\n        )\n    }\n\n    render() {\n\n        if (this.props.orders === null) {\n            return OrderTable.loadingState();\n        }\n\n        if (this.props.orders.length === 0) {\n            return OrderTable.emptyState();\n        }\n\n        return (\n            <div className=\"d-flex flex-column page-content\">\n                <table className=\"table table-hover page-table d-flex flex-column\">\n                    <thead className=\"thead-default\">\n                    <tr>\n                        <th>Order Number</th>\n                        <th>Order Total</th>\n                        <th>Order Date</th>\n                        <th>Status</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.rows()}\n                    </tbody>\n                </table>\n                <OrderTableFooter orders={this.props.orders}\n                                  hasFilter={this.props.hasFilter}/>\n            </div>\n        )\n    }\n}\n\nclass OrderRow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.date = this.date.bind(this);\n        this.status = this.status.bind(this);\n        this.rowClass = this.rowClass.bind(this);\n    }\n\n    rowClass() {\n        switch (this.props.order.status) {\n            case 'U':\n                return 'table-light';\n            case 'V':\n                return 'table-warning';\n            case 'P':\n                return 'table-primary';\n            case 'S':\n                return 'table-success';\n            case 'C':\n                return 'table-danger';\n        }\n\n        return '';\n    }\n\n    status() {\n        switch (this.props.order.status) {\n            case 'U':\n                return 'Unpaid';\n            case 'V':\n                return 'Verifying Payment';\n            case 'P':\n                return 'Processing';\n            case 'S':\n                return 'Shipped';\n            case 'C':\n                return 'Cancelled';\n        }\n\n        return this.props.order.status;\n    }\n\n    date() {\n        return this.props.order.date_ordered.format('LLL');\n    }\n\n    render() {\n        return (\n            <tr className={this.rowClass()}\n                data-toggle=\"modal\"\n                data-target=\"#order-modal\"\n                onClick={this.props.onOrderRowClick}>\n                <td>{this.props.order.id}</td>\n                <td>₱{this.props.order.total_price}</td>\n                <td>{this.date()}</td>\n                <td>{this.status()}</td>\n            </tr>\n        );\n    }\n}\n\nclass OrderTableFooter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.statistics = this.statistics.bind(this);\n        this.totalItems = this.totalItems.bind(this);\n        this.totalForStatus = this.totalForStatus.bind(this);\n    }\n\n    totalItems() {\n        return this.props.orders.length;\n    }\n\n    totalForStatus(statusCode) {\n        return this.props.orders.filter(order => {\n            return order.status === statusCode;\n        }).length;\n    }\n\n    statistics() {\n        const totalItems = this.totalItems();\n\n        if (this.props.hasFilter) {\n            return `${totalItems} Items`;\n        } else {\n            const totalUnpaid = this.totalForStatus('U');\n            const totalProcessing = this.totalForStatus('P');\n            const totalShipped = this.totalForStatus('S');\n            const totalCancelled = this.totalForStatus('C');\n\n            return `${totalItems} Items | ${totalUnpaid} Unpaid | ${totalProcessing} Processing | ${totalShipped} Shipped | ${totalCancelled} Cancelled`;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"table-footer bg-light d-flex align-items-center justify-content-center w-100\">\n                <small className=\"mb-0 text-dark\">{this.statistics()}</small>\n            </div>\n        )\n    }\n}\n\nexport default Orders;"]}