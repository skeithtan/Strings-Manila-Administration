{"version":3,"sources":["../../../views/js/orders.js"],"names":["fetchOrders","object","get","url","baseURL","beforeSend","authorizeXHR","data","startDate","endDate","success","completionHandler","error","console","log","response","fetchOrder","id","xhr","setRequestHeader","localStorage","token","Orders","props","dateToday","dateLastWeek","subtract","state","orders","statusFilter","dates","onDateChange","bind","refreshState","setState","toDate","dateString","toastID","formatDate","date","format","result","map","order","date_ordered","toast","document","getElementById","iziToast","hide","title","message","timeout","progressBar","filteredOrders","refreshData","info","Component","OrderHead","event","isStartDate","value","target","OrderTable","rows","loadingState","length","emptyState","OrderRow","status","rowClass","total_price","OrderTableFooter","totalItems","totalForStatus","statusCode","filter","totalUnpaid","totalProcessing","totalShipped","totalCancelled"],"mappings":"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","file":"orders.js","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport randomString from './random';\n\n// Fetch data\nfunction fetchOrders(object) {\n    $.get({\n        url: `${baseURL}/api/orders/`,\n        beforeSend: authorizeXHR,\n        data: {\n            \"start-date\": object.startDate,\n            \"end-date\": object.endDate\n        },\n        success: object.completionHandler,\n        error: response => console.log(response)\n    });\n}\n\nfunction fetchOrder(id, completionHandler) {\n    $.get({\n        url: `${baseURL}/api/orders/${id}/`,\n        beforeSend: authorizeXHR,\n        success: completionHandler,\n        error: response => console.log(response)\n    });\n}\n\nfunction authorizeXHR(xhr) {\n    xhr.setRequestHeader(\"Authorization\", `Token ${localStorage.token}`);\n}\n\n// React\nclass Orders extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const dateToday = moment();\n        const dateLastWeek = moment().subtract(7, 'days');\n\n        this.state = {\n            orders: null,\n            statusFilter: null,\n            dates: {\n                startDate: dateLastWeek,\n                endDate: dateToday,\n            }\n        };\n\n        this.onDateChange = this.onDateChange.bind(this);\n        this.refreshState = this.refreshState.bind(this);\n\n        this.refreshState();\n    }\n\n    onDateChange(dates) {\n        this.setState({orders: null});\n\n        function toDate(dateString) {\n            return moment(dateString, 'YYYY-MM-DD')\n        }\n\n        dates.startDate = toDate(dates.startDate);\n        dates.endDate = toDate(dates.endDate);\n\n        this.state.dates = dates;\n        this.refreshState();\n    }\n\n    refreshState(toastID = false) {\n        function formatDate(date) {\n            return date.format('YYYY-MM-DD');\n        }\n\n        const startDate = formatDate(this.state.dates.startDate);\n        const endDate = formatDate(this.state.dates.endDate);\n\n        fetchOrders({\n            startDate: startDate,\n            endDate: endDate,\n            completionHandler: result => {\n                //TODO: Sort by date\n\n                const orders = result.map(order => {\n                    order.date_ordered = moment(order.date_ordered);\n                    return order;\n                });\n\n                this.setState({\n                    orders: orders\n                });\n\n                if (toastID) {\n                    const toast = document.getElementById(toastID);\n                    iziToast.hide({}, toast);\n\n                    iziToast.success({\n                        title: \"Refreshed\",\n                        message: \"Data is up to date.\",\n                        timeout: 2500,\n                        progressBar: false\n                    })\n                }\n            }\n        })\n    }\n\n\n    render() {\n        //TODO: Filter\n        const filteredOrders = this.state.orders;\n\n        const refreshData = () => {\n            const toastID = randomString();\n\n            iziToast.info({\n                title: \"Fetching updates...\",\n                progressBar: false,\n                timeout: false,\n                id: toastID\n            });\n\n            this.refreshState(toastID);\n        };\n\n        return (\n            <div id=\"orders\"\n                 className=\"container-fluid m-0 p-0 h-100 w-100 d-flex flex-column\">\n                <OrderHead dates={this.state.dates}\n                           onDateChange={this.onDateChange}\n                           refreshData={refreshData}/>\n                <OrderTable orders={filteredOrders}/>\n            </div>\n        );\n    }\n\n}\n\nclass OrderHead extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        function formatDate(date) {\n            return date.format('YYYY-MM-DD');\n        }\n\n        const startDate = formatDate(this.props.dates.startDate);\n        const endDate = formatDate(this.props.dates.endDate);\n\n        const onDateChange = (event, isStartDate) => {\n            const value = event.target.value;\n\n            if (isStartDate) {\n                this.props.onDateChange({\n                    startDate: value,\n                    endDate: endDate\n                })\n            } else {\n                this.props.onDateChange({\n                    startDate: startDate,\n                    endDate: value\n                })\n            }\n        };\n\n        return (\n            <div className=\"container-fluid row ml-auto mr-auto bg-light page-head\">\n                <div className=\"mr-auto row p-3 pt-5 mt-auto\">\n                    <h4 className=\"mr-3\">Orders</h4>\n                    <div>\n                        <button className=\"btn btn-sm btn-outline-primary mr-1\"\n                                onClick={this.props.refreshData}>Refresh Data\n                        </button>\n                        <button className=\"btn btn-sm btn-outline-primary\">Generate Report</button>\n                    </div>\n                </div>\n\n                <div className=\"row pl-3 pb-3 mr-3\">\n                    <div className=\"mt-auto mr-2\">\n                        <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">Status filter</small>\n                        <div className=\"btn-group\"\n                             data-toggle=\"buttons\">\n                            <label className=\"btn btn-outline-secondary active\">\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>All\n                            </label>\n                            <label className=\"btn btn-outline-secondary\">\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Unpaid\n                            </label>\n                            <label className=\"btn btn-outline-secondary\">\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Verifying Payment\n                            </label>\n                            <label className=\"btn btn-outline-secondary\">\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Processing\n                            </label>\n                            <label className=\"btn btn-outline-secondary\">\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Shipped\n                            </label>\n                            <label className=\"btn btn-outline-secondary\">\n                                <input type=\"radio\"\n                                       name=\"options\"\n                                       autoComplete=\"off\"/>Cancelled\n                            </label>\n                        </div>\n                    </div>\n                    <div className=\"mt-auto ml-2 row \">\n                        <div className=\"mr-2\">\n                            <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">Start Date</small>\n                            <div className=\"input-group\">\n                                <input className=\"form-control\"\n                                       type=\"date\"\n                                       placeholder=\"Start Date\"\n                                       value={startDate}\n                                       onChange={event => onDateChange(event, true)}/>\n                            </div>\n                        </div>\n                        <div className=\"mr-2\">\n                            <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">End Date</small>\n                            <div className=\"input-group mb-2 mb-sm-0\">\n                                <div className=\"input-group\">\n                                    <input className=\"form-control\"\n                                           type=\"date\"\n                                           placeholder=\"End Date\"\n                                           value={endDate}\n                                           onChange={event => onDateChange(event, false)}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass OrderTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.rows = this.rows.bind(this);\n    }\n\n    static emptyState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100 bg-light\">\n                <h3>There's nothing here.</h3>\n                <p className=\"text-muted\">Refine your filters and try again.</p>\n            </div>\n        )\n    }\n\n    static loadingState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100\">\n                <h3>Loading...</h3>\n            </div>\n        );\n    }\n\n    rows() {\n        return this.props.orders.map(order => <OrderRow key={order.id}\n                                                        order={order}/>)\n    }\n\n    render() {\n\n        if (this.props.orders === null) {\n            return OrderTable.loadingState();\n        }\n\n        if (this.props.orders.length === 0) {\n            return OrderTable.emptyState();\n        }\n\n        return (\n            <div className=\"d-flex flex-column page-content\">\n                <table className=\"table table-hover page-table d-flex flex-column\">\n                    <thead className=\"thead-default\">\n                    <tr>\n                        <th>Order Number</th>\n                        <th>Order Total</th>\n                        <th>Order Date</th>\n                        <th>Status</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.rows()}\n                    </tbody>\n                </table>\n                <OrderTableFooter orders={this.props.orders}/>\n            </div>\n        )\n    }\n}\n\nclass OrderRow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.date = this.date.bind(this);\n        this.status = this.status.bind(this);\n        this.rowClass = this.rowClass.bind(this);\n    }\n\n    rowClass() {\n        switch (this.props.order.status) {\n            case 'U':\n                return 'table-light';\n            case 'V':\n                return 'table-warning';\n            case 'P':\n                return 'table-primary';\n            case 'S':\n                return 'table-success';\n            case 'C':\n                return 'table-danger';\n        }\n\n        return '';\n    }\n\n    status() {\n        switch (this.props.order.status) {\n            case 'U':\n                return 'Unpaid';\n            case 'V':\n                return 'Verifying Payment';\n            case 'P':\n                return 'Processing';\n            case 'S':\n                return 'Shipped';\n            case 'C':\n                return 'Cancelled';\n        }\n\n        return this.props.order.status;\n    }\n\n    date() {\n        return this.props.order.date_ordered.format('LLL');\n    }\n\n    render() {\n        return (\n            <tr className={this.rowClass()}>\n                <td>{this.props.order.id}</td>\n                <td>₱{this.props.order.total_price}</td>\n                <td>{this.date()}</td>\n                <td>{this.status()}</td>\n            </tr>\n        );\n    }\n}\n\nclass OrderTableFooter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.totalItems = this.totalItems.bind(this);\n        this.totalForStatus = this.totalForStatus.bind(this);\n    }\n\n    totalItems() {\n        return this.props.orders.length;\n    }\n\n    totalForStatus(statusCode) {\n        return this.props.orders.filter(order => {\n            return order.status === statusCode;\n        }).length;\n    }\n\n    render() {\n        const totalItems = this.totalItems();\n        const totalUnpaid = this.totalForStatus('U');\n        const totalProcessing = this.totalForStatus('P');\n        const totalShipped = this.totalForStatus('S');\n        const totalCancelled = this.totalForStatus('C');\n\n\n        return (\n            <div className=\"table-footer bg-light d-flex align-items-center justify-content-center w-100\">\n                <small className=\"mb-0\">{`${totalItems} Items | ${totalUnpaid} Unpaid | ${totalProcessing} Processing | ${totalShipped} Shipped | ${totalCancelled} Cancelled`}</small>\n            </div>\n        )\n    }\n}\n\nexport default Orders;"]}