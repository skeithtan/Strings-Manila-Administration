{"version":3,"sources":["../../../views/js/orders.js"],"names":["fetchOrders","object","get","url","baseURL","beforeSend","data","startDate","endDate","success","completionHandler","error","console","log","response","Orders","props","dateToday","dateLastWeek","subtract","state","orders","statusFilter","lastFetch","dates","onDateChange","bind","refreshState","generateReport","filteredOrders","onStatusFilterChange","onRefreshButtonClick","refreshOrders","setState","toDate","dateString","status","toastID","formatDate","date","format","result","map","order","date_ordered","descending","orderA","orderB","aTime","bTime","diff","sort","toast","document","getElementById","iziToast","hide","title","message","timeout","progressBar","reportData","filter","fetchDate","ipcRenderer","send","info","id","Component","OrderHead","event","isStartDate","value","target","refreshData","OrderTable","rows","loadingState","length","emptyState","hasFilter","OrderRow","rowClass","onOrderRowClick","total_price","OrderTableFooter","statistics","totalItems","totalForStatus","statusCode","totalUnpaid","totalVerifying","totalProcessing","totalShipped","totalCancelled"],"mappings":"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","file":"orders.js","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport randomString from './random';\nimport {fillOutOrderModal, authorizeXHR} from \"./modals\";\nimport electron from 'electron';\n\n// Fetch data\nfunction fetchOrders(object) {\n    $.get({\n        url: `${baseURL}/api/orders/`,\n        beforeSend: authorizeXHR,\n        data: {\n            \"start-date\": object.startDate,\n            \"end-date\": object.endDate\n        },\n        success: object.completionHandler,\n        error: response => console.log(response)\n    });\n}\n\n// React\nclass Orders extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const dateToday = moment();\n        const dateLastWeek = moment().subtract(7, 'days');\n\n        this.state = {\n            orders: null,\n            statusFilter: null,\n            lastFetch: null,\n            dates: {\n                startDate: dateLastWeek,\n                endDate: dateToday,\n            }\n        };\n\n        this.onDateChange = this.onDateChange.bind(this);\n        this.refreshState = this.refreshState.bind(this);\n        this.generateReport = this.generateReport.bind(this);\n        this.filteredOrders = this.filteredOrders.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n        this.onRefreshButtonClick = this.onRefreshButtonClick.bind(this);\n        refreshOrders = this.refreshState;\n\n        this.refreshState();\n    }\n\n    onDateChange(dates) {\n        this.setState({orders: null});\n\n        function toDate(dateString) {\n            return moment(dateString, 'YYYY-MM-DD')\n        }\n\n        dates.startDate = toDate(dates.startDate);\n        dates.endDate = toDate(dates.endDate);\n        this.state.dates = dates;\n\n        this.refreshState();\n    }\n\n    onStatusFilterChange(status) {\n        this.setState({\n            statusFilter: status\n        })\n    }\n\n    refreshState(toastID = false) {\n        function formatDate(date) {\n            return date.format('YYYY-MM-DD');\n        }\n\n        const startDate = formatDate(this.state.dates.startDate);\n        const endDate = formatDate(this.state.dates.endDate);\n\n        fetchOrders({\n            startDate: startDate,\n            endDate: endDate,\n            completionHandler: result => {\n                let orders = result.map(order => {\n                    order.date_ordered = moment(order.date_ordered);\n                    return order;\n                });\n\n                function descending(orderA, orderB) {\n                    const aTime = orderA.date_ordered;\n                    const bTime = orderB.date_ordered;\n\n                    return bTime.diff(aTime);\n                }\n\n                orders = orders.sort(descending);\n\n                this.setState({\n                    orders: orders,\n                    lastFetch: moment() //Time now\n                });\n\n                if (toastID) {\n                    const toast = document.getElementById(toastID);\n                    iziToast.hide({}, toast);\n\n                    iziToast.success({\n                        title: \"Refreshed\",\n                        message: \"Data is up to date.\",\n                        timeout: 2500,\n                        progressBar: false\n                    })\n                }\n            }\n        })\n    }\n\n    generateReport() {\n        const reportData = {\n            orders: this.filteredOrders(),\n            filter: this.state.statusFilter,\n            startDate: this.state.dates.startDate.format(\"LL\"),\n            endDate: this.state.dates.endDate.format(\"LL\"),\n            fetchDate: this.state.lastFetch.format(\"LL\")\n        };\n\n        const ipcRenderer = electron.ipcRenderer;\n        ipcRenderer.send('generate-orders-report', reportData);\n    }\n\n    filteredOrders() {\n        const statusFilter = this.state.statusFilter;\n\n        const orders = this.state.orders;\n\n        if (statusFilter === null) {\n            return orders;\n        }\n\n        return orders.filter(order => order.status === statusFilter);\n    }\n\n    onRefreshButtonClick() {\n        const toastID = randomString();\n\n        iziToast.info({\n            title: \"Fetching updates...\",\n            progressBar: false,\n            timeout: false,\n            id: toastID\n        });\n\n        this.refreshState(toastID);\n    }\n\n    render() {\n        const filteredOrders = this.filteredOrders();\n\n        return (\n            <div id=\"orders\"\n                 className=\"container-fluid m-0 p-0 h-100 w-100 d-flex flex-column\">\n                <OrderHead dates={this.state.dates}\n                           refreshData={this.onRefreshButtonClick}\n                           onDateChange={this.onDateChange}\n                           onStatusFilterChange={this.onStatusFilterChange}\n                           generateReport={this.generateReport}\n                />\n                <OrderTable orders={filteredOrders}\n                            hasFilter={this.state.statusFilter !== null}/>\n            </div>\n        );\n    }\n}\n\nclass OrderHead extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n\n    onDateChange(event, isStartDate) {\n        const value = moment(event.target.value);\n\n        if (isStartDate) {\n            this.props.onDateChange({\n                startDate: value,\n                endDate: this.props.dates.endDate,\n            })\n        } else {\n            this.props.onDateChange({\n                startDate: this.props.dates.startDate,\n                endDate: value\n            })\n        }\n    }\n\n    render() {\n        function formatDate(date) {\n            return date.format('YYYY-MM-DD');\n        }\n\n        const startDate = formatDate(this.props.dates.startDate);\n        const endDate = formatDate(this.props.dates.endDate);\n\n        return (\n            <div className=\"container-fluid row ml-auto mr-auto bg-light page-head\">\n                <div className=\"mr-auto row p-3 pt-5 mt-auto\">\n                    <h4 className=\"mr-3\">Orders</h4>\n                    <div>\n                        <button className=\"btn btn-sm btn-outline-primary mr-1\"\n                                onClick={this.props.refreshData}>Refresh Data\n                        </button>\n                        <button className=\"btn btn-sm btn-outline-primary\"\n                                onClick={this.props.generateReport}>Generate Report\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"row pl-3 pb-3 mr-3\">\n                    <div className=\"mt-auto mr-2\">\n                        <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">Status filter</small>\n                        <div className=\"btn-group\"\n                             data-toggle=\"buttons\">\n                            <label className=\"btn btn-outline-secondary active\"\n                                   onClick={() => this.props.onStatusFilterChange(null)}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>All\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('U')}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Unpaid\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('V')}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Verifying Payment\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('P')}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Processing\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('S')}>\n                                <input type=\"radio\"\n                                       autoComplete=\"off\"/>Shipped\n                            </label>\n                            <label className=\"btn btn-outline-secondary\"\n                                   onClick={() => this.props.onStatusFilterChange('C')}>\n                                <input type=\"radio\"\n                                       name=\"options\"\n                                       autoComplete=\"off\"/>Cancelled\n                            </label>\n                        </div>\n                    </div>\n                    <div className=\"mt-auto ml-2 row \">\n                        <div className=\"mr-2\">\n                            <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">Start Date</small>\n                            <input className=\"form-control\"\n                                   type=\"date\"\n                                   placeholder=\"Start Date\"\n                                   value={startDate}\n                                   onChange={event => this.onDateChange(event, true)}/>\n                        </div>\n                        <div className=\"mr-2\">\n                            <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">End Date</small>\n                            <div className=\"input-group mb-2 mb-sm-0\">\n                                <input className=\"form-control\"\n                                       type=\"date\"\n                                       placeholder=\"End Date\"\n                                       value={endDate}\n                                       onChange={event => this.onDateChange(event, false)}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass OrderTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.rows = this.rows.bind(this);\n    }\n\n    static emptyState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100 bg-light\">\n                <h3 className=\"text-muted\">There's nothing here.</h3>\n                <p className=\"text-muted\">Refine your filters and try again.</p>\n            </div>\n        )\n    }\n\n    static loadingState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100\">\n                <h3>Loading...</h3>\n            </div>\n        );\n    }\n\n    rows() {\n        return this.props.orders.map(order => <OrderRow key={order.id}\n                                                        order={order}\n                                                        onOrderRowClick={() => fillOutOrderModal(order.id)}/>\n        )\n    }\n\n    render() {\n        if (this.props.orders === null) {\n            return OrderTable.loadingState();\n        }\n\n        if (this.props.orders.length === 0) {\n            return OrderTable.emptyState();\n        }\n\n        return (\n            <div className=\"d-flex flex-column page-content\">\n                <table className=\"table table-hover page-table d-flex flex-column\">\n                    <thead className=\"thead-default\">\n                    <tr>\n                        <th>Order Number</th>\n                        <th>Order Total</th>\n                        <th>Order Date</th>\n                        <th>Status</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.rows()}\n                    </tbody>\n                </table>\n                <OrderTableFooter orders={this.props.orders}\n                                  hasFilter={this.props.hasFilter}/>\n            </div>\n        )\n    }\n}\n\nclass OrderRow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.date = this.date.bind(this);\n        this.status = this.status.bind(this);\n        this.rowClass = this.rowClass.bind(this);\n    }\n\n    rowClass() {\n        switch (this.props.order.status) {\n            case 'U':\n                return 'table-light';\n            case 'V':\n                return 'table-warning';\n            case 'P':\n                return 'table-primary';\n            case 'S':\n                return 'table-success';\n            case 'C':\n                return 'table-danger';\n        }\n\n        return '';\n    }\n\n    status() {\n        switch (this.props.order.status) {\n            case 'U':\n                return 'Unpaid';\n            case 'V':\n                return 'Verifying Payment';\n            case 'P':\n                return 'Processing';\n            case 'S':\n                return 'Shipped';\n            case 'C':\n                return 'Cancelled';\n        }\n\n        return this.props.order.status;\n    }\n\n    date() {\n        return this.props.order.date_ordered.format('LLL');\n    }\n\n    render() {\n        return (\n            <tr className={this.rowClass()}\n                data-toggle=\"modal\"\n                data-target=\"#order-modal\"\n                onClick={this.props.onOrderRowClick}>\n                <th>{this.props.order.id}</th>\n                <td>₱{this.props.order.total_price}</td>\n                <td>{this.date()}</td>\n                <td>{this.status()}</td>\n            </tr>\n        );\n    }\n}\n\nclass OrderTableFooter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.statistics = this.statistics.bind(this);\n        this.totalItems = this.totalItems.bind(this);\n        this.totalForStatus = this.totalForStatus.bind(this);\n    }\n\n    totalItems() {\n        return this.props.orders.length;\n    }\n\n    totalForStatus(statusCode) {\n        return this.props.orders.filter(order => {\n            return order.status === statusCode;\n        }).length;\n    }\n\n    statistics() {\n        const totalItems = this.totalItems();\n\n        if (this.props.hasFilter) {\n            return `${totalItems} Items`;\n        } else {\n            const totalUnpaid = this.totalForStatus('U');\n            const totalVerifying = this.totalForStatus('V');\n            const totalProcessing = this.totalForStatus('P');\n            const totalShipped = this.totalForStatus('S');\n            const totalCancelled = this.totalForStatus('C');\n\n            return `${totalItems} Items | ${totalUnpaid} Unpaid | ${totalVerifying} Verifying Payment | ${totalProcessing} Processing | ${totalShipped} Shipped | ${totalCancelled} Cancelled`;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"table-footer bg-light d-flex align-items-center justify-content-center w-100\">\n                <small className=\"mb-0 text-dark\">{this.statistics()}</small>\n            </div>\n        )\n    }\n}\n\nexport default Orders;"]}