{"version":3,"sources":["../../../views/js/sales.js"],"names":["fetchSales","object","get","url","baseURL","beforeSend","data","startDate","endDate","success","completionHandler","error","console","log","response","Sales","props","dateToday","dateLastWeek","subtract","state","stalls","totalSales","totalQuantity","dates","refreshState","bind","onDateChange","generateReport","onRefreshButtonClick","toastID","formatDate","date","format","descending","stallA","stallB","sales","salesPerStalls","result","stall_sales","sort","setState","total_sales","total_quantity","lastFetch","toast","document","getElementById","iziToast","hide","title","message","timeout","progressBar","toDate","dateString","info","id","reportData","totalProducts","fetchDate","ipcRenderer","send","Component","SalesHead","event","isStartDate","value","target","refreshData","SalesTable","rows","map","stall","loadingState","length","emptyState","SalesRow","name","quantity"],"mappings":"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","file":"sales.js","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport randomString from './random';\nimport {fillOutSalesModal, authorizeXHR} from \"./modals\";\nimport electron from 'electron';\n\n// Fetch data\nfunction fetchSales(object) {\n    $.get({\n        url: `${baseURL}/api/sales/`,\n        beforeSend: authorizeXHR,\n        data: {\n            \"start-date\": object.startDate,\n            \"end-date\": object.endDate\n        },\n        success: object.completionHandler,\n        error: response => console.log(response)\n    });\n}\n\n// React\nclass Sales extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const dateToday = moment();\n        const dateLastWeek = moment().subtract(7, 'days');\n\n        this.state = {\n            stalls: null,\n            totalSales: null,\n            totalQuantity: null,\n            dates: {\n                startDate: dateLastWeek,\n                endDate: dateToday,\n            }\n        };\n\n        this.refreshState = this.refreshState.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n        this.generateReport = this.generateReport.bind(this);\n        this.onRefreshButtonClick = this.onRefreshButtonClick.bind(this);\n\n        this.refreshState();\n    }\n\n    refreshState(toastID = false) {\n        function formatDate(date) {\n            return date.format('YYYY-MM-DD');\n        }\n\n        const startDate = formatDate(this.state.dates.startDate);\n        const endDate = formatDate(this.state.dates.endDate);\n\n        fetchSales({\n            startDate: startDate,\n            endDate: endDate,\n            completionHandler: result => {\n                function descending(stallA, stallB) {\n                    return stallB.sales - stallA.sales;\n                }\n\n                const salesPerStalls = result.stall_sales.sort(descending);\n\n                this.setState({\n                    stalls: salesPerStalls,\n                    totalSales: result.total_sales,\n                    totalQuantity: result.total_quantity,\n                    lastFetch: moment() //Time now\n                });\n\n                if (toastID) {\n                    const toast = document.getElementById(toastID);\n                    iziToast.hide({}, toast);\n\n                    iziToast.success({\n                        title: \"Refreshed\",\n                        message: \"Data is up to date.\",\n                        timeout: 2500,\n                        progressBar: false\n                    })\n                }\n            }\n        })\n    }\n\n    onDateChange(dates) {\n        this.setState({\n            stalls: null,\n            totalSales: null,\n            totalQuantity: null\n        });\n\n        function toDate(dateString) {\n            return moment(dateString, 'YYYY-MM-DD')\n        }\n\n        dates.startDate = toDate(dates.startDate);\n        dates.endDate = toDate(dates.endDate);\n        this.state.dates = dates;\n\n        this.refreshState();\n    }\n\n    onRefreshButtonClick() {\n        const toastID = randomString();\n        iziToast.info({\n            title: \"Fetching updates...\",\n            progressBar: false,\n            timeout: false,\n            id: toastID\n        });\n        this.refreshState(toastID);\n    }\n\n    generateReport() {\n        const reportData = {\n            stalls: this.state.stalls,\n            startDate: this.state.dates.startDate.format(\"LL\"),\n            endDate: this.state.dates.endDate.format(\"LL\"),\n            totalSales: this.state.totalSales,\n            totalProducts: this.state.totalQuantity,\n            fetchDate: this.state.lastFetch.format(\"LL\")\n        };\n\n        const ipcRenderer = electron.ipcRenderer;\n        ipcRenderer.send('generate-sales-report', reportData);\n    }\n\n    render() {\n        return (\n            <div id=\"sales\"\n                 className=\"container-fluid m-0 p-0 h-100 w-100 d-flex flex-column\">\n                <SalesHead dates={this.state.dates}\n                           onDateChange={this.onDateChange}\n                           generateReport={this.generateReport}\n                           refreshData={this.onRefreshButtonClick}/>\n                <SalesTable stalls={this.state.stalls}\n                            totalQuantity={this.state.totalQuantity}\n                            totalSales={this.state.totalSales}/>\n            </div>\n        )\n    }\n}\n\nclass SalesHead extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n\n    onDateChange(event, isStartDate) {\n        const value = moment(event.target.value);\n\n        if (isStartDate) {\n            this.props.onDateChange({\n                startDate: value,\n                endDate: this.props.dates.endDate,\n            })\n        } else {\n            this.props.onDateChange({\n                startDate: this.props.dates.startDate,\n                endDate: value\n            })\n        }\n    }\n\n    render() {\n        function formatDate(date) {\n            return date.format('YYYY-MM-DD');\n        }\n\n        const startDate = formatDate(this.props.dates.startDate);\n        const endDate = formatDate(this.props.dates.endDate);\n\n        return (\n            <div className=\"container-fluid row ml-auto mr-auto bg-light page-head\">\n                <div className=\"mr-auto row pt-5 pl-3 pr-3\">\n                    <h4 className=\"mr-3\">Sales</h4>\n                    <div>\n                        <button className=\"btn btn-sm btn-outline-primary mr-1\"\n                                onClick={this.props.refreshData}>Refresh Data\n                        </button>\n                        <button className=\"btn btn-sm btn-outline-primary\"\n                                onClick={this.props.generateReport}>Generate Report\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row mb-2 ml-2 pt-3 mr-3\">\n                    <div className=\"mr-2\">\n                        <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">Start Date</small>\n                        <input type=\"date\"\n                               className=\"form-control\"\n                               value={startDate}\n                               placeholder=\"Start Date\"\n                               onChange={event => this.onDateChange(event, true)}/>\n                    </div>\n                    <div className=\"mr-2\">\n                        <small className=\"text-muted mt-auto mb-2 mr-3 d-block\">End Date</small>\n                        <input type=\"date\"\n                               className=\"form-control\"\n                               value={endDate}\n                               placeholder=\"End Date\"\n                               onChange={event => this.onDateChange(event, false)}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass SalesTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.rows = this.rows.bind(this);\n    }\n\n    static loadingState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100\">\n                <h3>Loading...</h3>\n            </div>\n        );\n    }\n\n    static emptyState() {\n        return (\n            <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center h-100 bg-light\">\n                <h3>There's nothing here.</h3>\n                <p className=\"text-muted\">Refine your filters and try again.</p>\n            </div>\n        )\n    }\n\n    rows() {\n        return this.props.stalls.map(stall => <SalesRow key={stall.id}\n                                                        stall={stall}/>)\n    }\n\n    render() {\n\n        if (this.props.stalls === null) {\n            return SalesTable.loadingState();\n        }\n\n        if (this.props.stalls.length === 0) {\n            return SalesTable.emptyState();\n        }\n\n        return (\n            <div className=\"d-flex flex-column page-content\">\n                <table className=\"table table-hover page-table d-flex flex-column mb-0\">\n                    <thead className=\"thead-default\">\n                    <tr>\n                        <th>Stall Name</th>\n                        <th className=\"text-right\">Products Sold</th>\n                        <th className=\"text-right\">Sales</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.rows()}\n                    </tbody>\n                    <tfoot>\n                    <tr className=\"bg-light border\">\n                        <th>Total</th>\n                        <th className=\"financial-number\">{this.props.totalQuantity}</th>\n                        <th className=\"financial-number\">₱{this.props.totalSales}</th>\n                    </tr>\n                    </tfoot>\n                </table>\n            </div>\n        )\n    }\n}\n\nclass SalesRow extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <tr data-toggle=\"modal\"\n                data-target=\"#sales-modal\"\n                onClick={() => fillOutSalesModal(this.props.stall)}>\n                <td>{this.props.stall.name}</td>\n                <td className=\"financial-number\">{this.props.stall.quantity}</td>\n                <td className=\"financial-number\">₱{this.props.stall.sales}</td>\n            </tr>\n        )\n    }\n}\n\nexport default Sales;"]}