{"version":3,"sources":["../main.js"],"names":["electron","require","path","url","mainWindow","app","BrowserWindow","ipcMain","createWindow","width","height","minWidth","minHeight","titleBarStyle","frame","show","on","focus","loadURL","format","pathname","join","__dirname","protocol","slashes","webContents","session","clearStorageData","storages","quit","makeReportWindow","windowTitle","title","maxWidth","loadOrdersReportWindow","orders","window","send","loadOrderDetailReportWindow","order","id","loadSalesReportWindow","sales","loadSalesDetailReportWindow","event","arg"],"mappings":"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","file":"main.js","sourcesContent":["const electron = require('electron');\nconst path = require('path');\nconst url = require('url');\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow;\n\nlet {app, BrowserWindow, ipcMain} = electron;\n\nfunction createWindow() {\n    // Create the browser window.\n    mainWindow = new BrowserWindow({\n        width: 1200,\n        height: 600,\n        minWidth: 1050,\n        minHeight: 600,\n        titleBarStyle: \"hiddenInset\",\n        frame: false,\n        show: false\n    });\n\n    mainWindow.on('ready-to-show', () => {\n        mainWindow.show();\n        mainWindow.focus();\n    });\n\n    // and load the index.html of the app.\n    mainWindow.loadURL(url.format({\n        pathname: path.join(__dirname, '/views/templates/sign-in.html'),\n        protocol: 'file:',\n        slashes: true\n    }));\n\n    // Open the DevTools.\n    // mainWindow.webContents.openDevTools()\n\n    // Emitted when the window is closed.\n    mainWindow.on('closed', function () {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        mainWindow = null;\n    });\n\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function () {\n    mainWindow.webContents.session.clearStorageData({\n        storages: [\"localStorage\", \"cookies\"]\n    }, () => {\n        app.quit();\n    });\n});\n\napp.on('activate', function () {\n    // On OS X it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (mainWindow === null) {\n        createWindow();\n    }\n});\n\nfunction makeReportWindow(windowTitle) {\n    return new BrowserWindow({\n        width: 1000,\n        height: 900,\n        title: windowTitle,\n        minWidth: 1000,\n        minHeight: 500,\n        maxWidth: 1000\n    });\n}\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\nfunction loadOrdersReportWindow(orders) {\n    let window = makeReportWindow(\"Orders Report\");\n\n    window.loadURL(url.format({\n        pathname: path.join(__dirname, '/views/templates/reports/order-report-window.html'),\n        protocol: 'file:',\n        slashes: true\n    }));\n\n    window.webContents.on('did-finish-load', () => {\n        window.webContents.send('message', orders);\n    });\n}\n\nfunction loadOrderDetailReportWindow(order) {\n    let window = makeReportWindow(`Order ${order.id} Detail Report`);\n\n    window.loadURL(url.format({\n        pathname: path.join(__dirname, '/views/templates/reports/order-report-detail-window.html'),\n        protocol: 'file:',\n        slashes: true\n    }));\n\n    window.webContents.on('did-finish-load', () => {\n        window.webContents.send('message', order);\n    });\n}\n\nfunction loadSalesReportWindow(sales) {\n    let window = makeReportWindow(\"Sales Report\");\n\n    window.loadURL(url.format({\n        pathname: path.join(__dirname, '/views/templates/reports/sales-report-window.html'),\n        protocol: 'file:',\n        slashes: true\n    }));\n\n    window.webContents.on('did-finish-load', () => {\n        window.webContents.send('message', sales);\n    });\n}\n\nfunction loadSalesDetailReportWindow(sales) {\n    let window = makeReportWindow(\"Sales Report\");\n\n    window.loadURL(url.format({\n        pathname: path.join(__dirname, '/views/templates/reports/sales-detail-report-window.html'),\n        protocol: 'file:',\n        slashes: true\n    }));\n\n    window.webContents.on('did-finish-load', () => {\n        window.webContents.send('message', sales);\n    });\n}\n\nipcMain.on('generate-orders-report', (event, arg) => loadOrdersReportWindow(arg));\nipcMain.on('generate-order-detail-report', (event, arg) => loadOrderDetailReportWindow(arg));\nipcMain.on('generate-sales-report', (event, arg) => loadSalesReportWindow(arg));\nipcMain.on('generate-sales-detail-report', (event, arg) => loadSalesDetailReportWindow(arg));\n"]}